//
//  MemoDataModel.swift
//  MyColorMemoApp
//
//  Created by YUKI の MacBook Pro on 2022/02/18.
//

import Foundation
// 13-1.Realmのデータモデルを作成
// まずはこのファイル内でライブラリを使える状態にする
// ライブラリを使う際にはこのようにimportキーワードに続いてライブラリ名を書くことでファイル内から参照することができる
// 次にこのメモデータモデルをRealmを使ってデータ保存できるように書き換えていく
// まずはRealmの公式ドキュメントで使い方を見る
// このドキュメントにはモデルの定義方法が書かれているのでこれに従ってメモデータモデルを書き換える
import RealmSwift
// 13-2.まずはモデルをクラスに変更した上でObjectというクラスを継承する必要がある
// struct MemoDataModel {
// そうするとこのようにコンパイルエラーが発生する
// これはストラクトからクラスに書き換えたことによってイニシャライザの定義が必要になるために発生したエラー
class MemoDataModel: Object {
    // 13-4.識別子はString型の文字列とし、そこに一意な文字列を代入するためにUUIDクラスのuuidStringというプロパティを代入した
    // このuuidStringとは参照するたびに一意な文字列を返してくれるのでデータのIDなどを定義する際に使用されることがよくある
    // ではモデルの書き換えが正常に完了したか確認をするために一度アプリを実行してみる
    // モデルの書き換えによってエラーが生じた箇所がある
    // エラーが出た場合はNavigatorエリアのIssueタブから該当箇所を確認できる
    // そうするとモデルがストラクトからクラスに書きかわったことによってイニシャライザがなくなったために、エラーが発生したことがわかる
    // ではこれを解消していく。→HomeViewController→13-5.
    @objc dynamic var id: String = UUID().uuidString // データを一位に識別するための識別子
    // 13-3. 原因はテキストとレコードデイトのプロパティに初期値が指定されていないため
    // なのであらかじめプロパティに初期値を指定してあげればOK
    // これでコンパイルエラーが解消された
    // 次にモデルの各プロパティには＠Objcとdynamicというキーワードを付与する必要があるようなのでこれらも追加していく
    // これで大まかなモデルは完了
    // 注意点、データを保存する際にはデータの一意性を担保するためにデータ一つ一つに対して固有の識別子を付けることを推奨している
    // この識別子がないとプログラム上でデータを一意に識別できずにデータの編集や削除ができなくなってしまうため
    // そこでデータの識別子を定義するためにIDというプロパティも新たに追加しておく
    @objc dynamic var text: String = ""
    @objc dynamic var recordDate: Date = Date()
    
}


